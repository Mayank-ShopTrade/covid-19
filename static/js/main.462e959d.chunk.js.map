{"version":3,"sources":["App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid.png","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","containers","Grid","container","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setfetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaImage","image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.462e959d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\n\nimport { Card,CardContent,Typography,Grid} from '@material-ui/core';\n\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\nimport { loadPartialConfig } from '@babel/core';\n\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) => {\n    if(!confirmed){\n        return 'Loading...';\n    }\n    return(\n        <div className={styles.containers}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={ confirmed.value } duration={2.0} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Active Cases</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={ recovered.value } duration={2.0} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Recoveries</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={ deaths.value } duration={2.0} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Deaths</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n    if(country){\n        changeableUrl = `${url}/countries/${country}`;\n    }\n    try{\n        const { data } = await axios.get(changeableUrl);\n        const modifiedData = {\n            confirmed:data.confirmed,\n            recovered:data.recovered,\n            deaths:data.deaths,\n            lastUpdate:data.lastUpdate\n        }\n        return modifiedData;\n    }\n    catch (error){\n\n    }\n}\n\n\nexport const fetchDailyData = async () => {\n    try{\n        const { data } = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }))\n\n        return modifiedData;\n    }\n    catch (error){\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try{\n        const { data : {countries} } = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n    }\n    catch (error){\n        console.log(error);\n    }\n}","import React,{useState,useEffect} from 'react';\n\nimport {fetchDailyData } from '../../api';\n\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data : {confirmed, deaths, recovered}, country }) => {\n    const [dailyData,setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async() => {\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    },[]); \n\n    const lineChart = (\n        dailyData.length ? (\n        <Line  \n            data={{\n                labels: dailyData.map(({ date })=> date ),\n                datasets:[{\n                    data: dailyData.map(({ confirmed }) => confirmed),\n                    label:'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n                },\n                {\n                    data: dailyData.map(({ deaths }) => deaths),\n                    label:'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255,0,0,0.5)',\n                    fill: true,\n                }]}} \n            />) : null\n    );\n\n    console.log(confirmed,recovered,deaths);\n\n    const barChart = (\n        confirmed ? (\n        <Bar  \n            data={{\n                labels: ['Infected','Recovered','Deaths'],\n                datasets:[\n                {\n                    data: [confirmed.value ,recovered.value ,deaths.value ],\n                    label:'People',\n                    backgroundColor: ['rgba(2055,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\n                }]\n            }} \n            options={{\n                legend:{display:false},\n                title:{display: true, text:`Current state in ${country}`}\n            }}\n        />) : null\n    );\n\n    return(\n        <div className={styles.container}>\n            {country ? barChart : lineChart }\n        </div>\n    );\n}\n\nexport default Chart;","import React, {useState,useEffect} from 'react';\n\nimport { NativeSelect,formControl, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n\n    const [fetchedCountries,setfetchedCountries] = useState([]);\n\n    console.log('I am here');\n\n    useEffect(() => {\n        const fetchAPI = async() => {\n            setfetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    },[setfetchedCountries]); \n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    );\n}\n\nexport default CountryPicker;","import React from 'react';\nimport { denodeify } from 'q';\n\nimport {Cards, Chart, CountryPicker } from './components';\n\nimport styles from './App.module.css';\n\nimport {fetchData} from './api';\n\nimport coronaImage from './images/covid.png';\n\nclass App extends React.Component{\n\n    state = {\n        data:{},\n        country:''\n    }\n\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n        console.log(fetchedData);\n        this.setState({\n            data:fetchedData\n        })\n    }\n    \n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({data: fetchedData,country:country});\n    }\n\n    render(){\n        const {data, country} = this.state;\n        return(\n            <div className={styles.container}>\n                <img src={coronaImage} className={styles.image} />\n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data={data} country={country}/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}